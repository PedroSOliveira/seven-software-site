module.exports = {
  sendDailyPushNotification,
};

const OneSignal = require("onesignal-node");
const onesignal_app_info = require("../keys/onesignal_app_info.json");
const client = new OneSignal.Client(
  onesignal_app_info.app_id,
  onesignal_app_info.api_key
);

const supportedLanguages = ["en"];

const notifications = {
  en: {
    headings: [
      "üìù Simulado ENEM",
      "‚úÖ Aumente suas chances de aprova√ß√£o",
      "Simulados completos!",
      "üìù Pratique agora!",
      "Aprimore seu conhecimento!",
      "Teste seu aprendizado!",
      "üìù Prepare-se para a prova!",
      "üìù Estude e seja aprovado!",
      "Simulados personalizados!",
      "üìù Revis√£o dispon√≠vel!",
      "Domine toda as mat√©rias!",
    ],
    contents: [
      "Aumente suas chances de aprova√ß√£o.",
      "Prepare-se com as mais de 1000 quest√µes.",
      "Reveja seus resultados.",
      "Fique por dentro das quest√µes.",
      "Simulados anteriores dispon√≠veis.",
      "Estude de forma eficiente.",
      "Estude de qualquer lugar.",
      "Pratique as quest√µes de matem√°tica.",
      "Treine para todas as mat√©rias da prova.",
      "Pratique as quest√µes de humanas.",
    ],
  },
};

async function sendDailyPushNotification() {
  const notification = {
    headings: generateHeadings(),
    contents: generateContents(),
    included_segments: ["Subscribed Users"],
    delayed_option: "last-active",
  };
  try {
    const response = await client.createNotification(notification);
    console.log("------daily notification sent successfully:\n", notification);
  } catch (e) {
    console.log("------Error sending daily notification:\n", e);
    if (e instanceof OneSignal.HTTPError) {
      // When status code of HTTP response is not 2xx, HTTPError is thrown.
      console.error(e.statusCode);
      console.error(e.body);
    }
  }
}

function generateHeadings() {
  let headings = {};
  for (let language of supportedLanguages) {
    let length = notifications[language].headings.length;
    let index = Math.floor(Math.random() * length);
    headings[language] = notifications[language].headings[index];
  }
  return headings;
}

function generateContents() {
  let contents = {};
  for (let language of supportedLanguages) {
    let length = notifications[language].contents.length;
    let index = Math.floor(Math.random() * length);
    contents[language] = notifications[language].contents[index];
  }
  return contents;
}
